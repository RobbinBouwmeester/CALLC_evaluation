#                                                                                       #
#########################################################################################
setwd(file.path(main_dir,"data/parsed/nodup_preds_2019_allmods/"))
comparison_algo_summary <- read.csv("results_cor.csv")
l1_selection <-  c("LASSO","BRR","SVR","AB","GB","Layer 1")
comparison_algo_summary$algo <- factor(comparison_algo_summary$algo, levels = l1_selection)
emf(file=file.path(main_dir,"figs/unique/lc/layer_1_unique_comp_lc_r.emf"),
width=6.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
plot_learning_curves(comparison_algo_summary[comparison_algo_summary$algo %in% l1_selection,],
ylab="Pearson correlation",
ylim=c(0.0,1.0),
percentage=F,
legend_loc=c(0.95,0.1),
title="Unique analyte structures")
dev.off()
comparison_algo_summary <- read.csv("results_cor.csv")
l1_selection <-  c("Layer 1","Layer 2","Layer 3")
comparison_algo_summary$algo <- factor(comparison_algo_summary$algo, levels = l1_selection)
emf(file=file.path(main_dir,"figs/unique/lc/layer_unique_comp_lc_r.emf"),
width=6.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
plot_learning_curves(comparison_algo_summary[comparison_algo_summary$algo %in% l1_selection,],
ylab="Pearson correlation",
ylim=c(0.0,1.0),
percentage=F,
legend_loc=c(0.95,0.1),
title="Unique analyte structures")
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results                                                                   #
#                                                                                       #
#########################################################################################
setwd(file.path(main_dir,"data/parsed/dup_cv_preds_2019"))
all_l1 <- read.csv("full_l1_preds_cor.csv")
all_l2 <- read.csv("full_l2_preds_cor.csv")
all_l3 <- read.csv("full_l3_preds_cor.csv")
sum(abs(all_l1$rt-all_l1$pred))/length(all_l1$rt)
sum(abs(all_l2$rt-all_l2$pred))/length(all_l1$rt)
sum(abs(all_l3$rt-all_l3$pred))/length(all_l1$rt)
median(abs(all_l1$rt-all_l1$pred))
median(abs(all_l2$rt-all_l2$pred))
median(abs(all_l3$rt-all_l3$pred))
cor(all_l1$rt,all_l1$pred)
cor(all_l2$rt,all_l2$pred)
cor(all_l3$rt,all_l3$pred)
unique_experi <- unique(all_l1$experiment)
l1_mae <- c()
l1_mae_sd <- c()
l2_mae <- c()
l2_mae_sd <- c()
l3_mae <- c()
l3_mae_sd <- c()
l1_cor <- c()
l1_cor_sd <- c()
l2_cor <- c()
l2_cor_sd <- c()
l3_cor <- c()
l3_cor_sd <- c()
train_sizes <- c()
for (e in unique_experi){
l1_mae_folds <- c()
l1_cor_folds <- c()
l2_mae_folds <- c()
l2_cor_folds <- c()
l3_mae_folds <- c()
l3_cor_folds <- c()
temp_l1 <- all_l1[all_l1$experiment==e,]
temp_l2 <- all_l2[all_l2$experiment==e,]
temp_l3 <- all_l3[all_l3$experiment==e,]
for (i in unique(temp_l1$fold_number)){
temptemp_l1 <- temp_l1[temp_l1$fold_number == i,]
l1_mae_folds <- c(l1_mae_folds,sum(abs(temptemp_l1$rt-temptemp_l1$pred))/length(temptemp_l1$rt))
l1_cor_folds <- c(l1_cor_folds,cor(temptemp_l1$rt,temptemp_l1$pred))
}
for (i in unique(temp_l2$fold_number)){
temptemp_l2 <- temp_l2[temp_l2$fold_number == i,]
l2_mae_folds <- c(l2_mae_folds,sum(abs(temptemp_l2$rt-temptemp_l2$pred))/length(temptemp_l2$rt))
l2_cor_folds <- c(l2_cor_folds,cor(temptemp_l2$rt,temptemp_l2$pred))
}
for (i in unique(temp_l3$fold_number)){
temptemp_l3 <- temp_l3[temp_l3$fold_number == i,]
l3_mae_folds <- c(l3_mae_folds,sum(abs(temptemp_l3$rt-temptemp_l3$pred))/length(temptemp_l3$rt))
l3_cor_folds <- c(l3_cor_folds,cor(temptemp_l3$rt,temptemp_l3$pred))
}
l1_mae <- c(l1_mae,sum(abs(temp_l1$rt-temp_l1$pred))/length(temp_l1$rt))
l2_mae <- c(l2_mae,sum(abs(temp_l2$rt-temp_l2$pred))/length(temp_l2$rt))
l3_mae <- c(l3_mae,sum(abs(temp_l3$rt-temp_l3$pred))/length(temp_l1$rt))
l1_cor <- c(l1_cor,cor(temp_l1$rt,temp_l1$pred))
l2_cor <- c(l2_cor,cor(temp_l2$rt,temp_l2$pred))
l3_cor <- c(l3_cor,cor(temp_l3$rt,temp_l3$pred))
l1_mae_sd <- c(l1_mae_sd,sd(l1_mae_folds,na.rm=T))
l1_cor_sd <- c(l1_cor_sd,sd(l1_cor_folds,na.rm=T))
l2_mae_sd <- c(l2_mae_sd,sd(l2_mae_folds,na.rm=T))
l2_cor_sd <- c(l2_cor_sd,sd(l2_cor_folds,na.rm=T))
l3_mae_sd <- c(l3_mae_sd,sd(l3_mae_folds,na.rm=T))
l3_cor_sd <- c(l3_cor_sd,sd(l3_cor_folds,na.rm=T))
train_sizes <- c(train_sizes,temp_l1$train_size[1])
}
perf_comp <- data.frame(l1_cor=l1_cor,
l2_cor=l2_cor,
l3_cor=l3_cor,
l1_mae=l1_mae,
l2_mae=l2_mae,
l3_mae=l3_mae,
l1_cor_sd=l1_cor_sd,
l1_mae_sd=l1_mae_sd,
l2_cor_sd=l2_cor_sd,
l2_mae_sd=l2_mae_sd,
l3_cor_sd=l3_cor_sd,
l3_mae_sd=l3_mae_sd,
train_sizes=train_sizes)
rownames(perf_comp) <- unique_experi
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l3 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/duplicate/cv/cv_comp_scatter_bar.emf"),
width=9,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l1_cor,l3_cor,pch=10,xlab="Layer 1 correlation",ylab="Layer 3 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l1_cor-l3_cor),c("l3_cor")]-perf_comp[order(l1_cor-l3_cor),c("l1_cor")],
ylab="Difference in correlation (Layer 3 - Layer 1)",
names.arg=rownames(perf_comp[order(l1_cor-l3_cor),]),las=2,cex.names=0.425,
ylim=c(min(l3_cor-l1_cor)-0.05,max(l3_cor-l1_cor)+0.05))
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l3 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/duplicate/cv/cv_comp_numtrain.emf"),
width=6.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l3_cor-perf_comp$l1_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
#sel_text <- c(
#  rownames(perf_comp[rank(perf_comp$diff_l) == nrow(perf_comp),]),
#  rownames(perf_comp[rank(perf_comp$diff_l) == nrow(perf_comp)-1,]),
#  rownames(perf_comp[rank(perf_comp$diff_l) == 1,]),
#  rownames(perf_comp[rank(perf_comp$diff_l) == 2,])
#)
#text(perf_comp[sel_text[1],]$diff_l,perf_comp[sel_text[1],]$train_sizes+35,labels=sel_text[1],cex=0.7)
#text(perf_comp[sel_text[2],]$diff_l,perf_comp[sel_text[2],]$train_sizes-35,labels=sel_text[2],cex=0.7)
#text(perf_comp[sel_text[3],]$diff_l,perf_comp[sel_text[3],]$train_sizes+35,labels=sel_text[3],cex=0.7)
#text(perf_comp[sel_text[4],]$diff_l,perf_comp[sel_text[4],]$train_sizes-35,labels=sel_text[4],cex=0.7)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L2 and l3 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/duplicate/cv/cv_comp_scatter_bar_l2l3.emf"),
width=9,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l2_cor,l3_cor,pch=10,xlab="Layer 2 correlation",ylab="Layer 3 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l2_cor-l3_cor),c("l3_cor")]-perf_comp[order(l2_cor-l3_cor),c("l2_cor")],
ylab="Difference in correlation (Layer 3 - Layer 2)",
names.arg=rownames(perf_comp[order(l2_cor-l3_cor),]),las=2,cex.names=0.425,
ylim=c(min(l3_cor-l2_cor)-0.05,max(l3_cor-l2_cor)+0.05))
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L2 and l3 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/duplicate/cv/cv_comp_numtrain_l2l3.emf"),
width=6.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l3_cor-perf_comp$l2_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l2 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/duplicate/cv/cv_comp_scatter_bar_l1l2.emf"),
width=9,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l1_cor,l2_cor,pch=10,xlab="Layer 1 correlation",ylab="Layer 2 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l1_cor-l2_cor),c("l1_cor")]-perf_comp[order(l1_cor-l2_cor),c("l2_cor")],
ylab="Difference in correlation (Layer 2 - Layer 1)",
names.arg=rownames(perf_comp[order(l1_cor-l2_cor),]),las=2,cex.names=0.425,
ylim=c(min(l1_cor-l2_cor)-0.05,max(l1_cor-l2_cor)+0.05))
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l2 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/duplicate/cv/cv_comp_numtrainl1l2.emf"),
width=6.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l1_cor-perf_comp$l2_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - no duplicate analytes                                           #
#                                                                                       #
#########################################################################################
setwd(file.path(main_dir,"data/parsed/nodup_cv_preds_2019_allmods"))
all_l1 <- read.csv("full_l1_preds_cor.csv")
all_l2 <- read.csv("full_l2_preds_cor.csv")
all_l3 <- read.csv("full_l3_preds_cor.csv")
sum(abs(all_l1$rt-all_l1$pred))/length(all_l1$rt)
sum(abs(all_l2$rt-all_l2$pred))/length(all_l1$rt)
sum(abs(all_l3$rt-all_l3$pred))/length(all_l1$rt)
median(abs(all_l1$rt-all_l1$pred))
median(abs(all_l2$rt-all_l2$pred))
median(abs(all_l3$rt-all_l3$pred))
cor(all_l1$rt,all_l1$pred)
cor(all_l2$rt,all_l2$pred)
cor(all_l3$rt,all_l3$pred)
unique_experi <- unique(all_l1$experiment)
l1_mae <- c()
l1_mae_sd <- c()
l2_mae <- c()
l2_mae_sd <- c()
l3_mae <- c()
l3_mae_sd <- c()
l1_cor <- c()
l1_cor_sd <- c()
l2_cor <- c()
l2_cor_sd <- c()
l3_cor <- c()
l3_cor_sd <- c()
train_sizes <- c()
for (e in unique_experi){
l1_mae_folds <- c()
l1_cor_folds <- c()
l2_mae_folds <- c()
l2_cor_folds <- c()
l3_mae_folds <- c()
l3_cor_folds <- c()
temp_l1 <- all_l1[all_l1$experiment==e,]
temp_l2 <- all_l2[all_l2$experiment==e,]
temp_l3 <- all_l3[all_l3$experiment==e,]
for (i in unique(temp_l1$fold_number)){
temptemp_l1 <- temp_l1[temp_l1$fold_number == i,]
l1_mae_folds <- c(l1_mae_folds,sum(abs(temptemp_l1$rt-temptemp_l1$pred))/length(temptemp_l1$rt))
l1_cor_folds <- c(l1_cor_folds,cor(temptemp_l1$rt,temptemp_l1$pred))
}
for (i in unique(temp_l2$fold_number)){
temptemp_l2 <- temp_l2[temp_l2$fold_number == i,]
l2_mae_folds <- c(l2_mae_folds,sum(abs(temptemp_l2$rt-temptemp_l2$pred))/length(temptemp_l2$rt))
l2_cor_folds <- c(l2_cor_folds,cor(temptemp_l2$rt,temptemp_l2$pred))
}
for (i in unique(temp_l3$fold_number)){
temptemp_l3 <- temp_l3[temp_l3$fold_number == i,]
l3_mae_folds <- c(l3_mae_folds,sum(abs(temptemp_l3$rt-temptemp_l3$pred))/length(temptemp_l3$rt))
l3_cor_folds <- c(l3_cor_folds,cor(temptemp_l3$rt,temptemp_l3$pred))
}
l1_mae <- c(l1_mae,sum(abs(temp_l1$rt-temp_l1$pred))/length(temp_l1$rt))
l2_mae <- c(l2_mae,sum(abs(temp_l2$rt-temp_l2$pred))/length(temp_l2$rt))
l3_mae <- c(l3_mae,sum(abs(temp_l3$rt-temp_l3$pred))/length(temp_l1$rt))
l1_cor <- c(l1_cor,cor(temp_l1$rt,temp_l1$pred))
l2_cor <- c(l2_cor,cor(temp_l2$rt,temp_l2$pred))
l3_cor <- c(l3_cor,cor(temp_l3$rt,temp_l3$pred))
l1_mae_sd <- c(l1_mae_sd,sd(l1_mae_folds,na.rm=T))
l1_cor_sd <- c(l1_cor_sd,sd(l1_cor_folds,na.rm=T))
l2_mae_sd <- c(l2_mae_sd,sd(l2_mae_folds,na.rm=T))
l2_cor_sd <- c(l2_cor_sd,sd(l2_cor_folds,na.rm=T))
l3_mae_sd <- c(l3_mae_sd,sd(l3_mae_folds,na.rm=T))
l3_cor_sd <- c(l3_cor_sd,sd(l3_cor_folds,na.rm=T))
train_sizes <- c(train_sizes,temp_l1$train_size[1])
}
perf_comp <- data.frame(l1_cor=l1_cor,
l2_cor=l2_cor,
l3_cor=l3_cor,
l1_mae=l1_mae,
l2_mae=l2_mae,
l3_mae=l3_mae,
l1_cor_sd=l1_cor_sd,
l1_mae_sd=l1_mae_sd,
l2_cor_sd=l2_cor_sd,
l2_mae_sd=l2_mae_sd,
l3_cor_sd=l3_cor_sd,
l3_mae_sd=l3_mae_sd,
train_sizes=train_sizes)
rownames(perf_comp) <- unique_experi
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l3 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/unique/cv/cv_comp_scatter_bar_unique.emf"),
width=9,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l1_cor,l3_cor,pch=10,xlab="Layer 1 correlation",ylab="Layer 3 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l1_cor-l3_cor),c("l3_cor")]-perf_comp[order(l1_cor-l3_cor),c("l1_cor")],
ylab="Difference in correlation (Layer 3 - Layer 1)",
names.arg=rownames(perf_comp[order(l1_cor-l3_cor),]),las=2,cex.names=0.425,
ylim=c(min(l3_cor-l1_cor)-0.05,max(l3_cor-l1_cor)+0.05))
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l3 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/unique/cv/cv_comp_numtrain_unique.emf"),
width=6.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l3_cor-perf_comp$l1_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L2 and l3 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/unique/cv/cv_comp_scatter_bar_unique_l2l3.emf"),
width=9,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l2_cor,l3_cor,pch=10,xlab="Layer 2 correlation",ylab="Layer 3 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l2_cor-l3_cor),c("l3_cor")]-perf_comp[order(l2_cor-l3_cor),c("l2_cor")],
ylab="Difference in correlation (Layer 3 - Layer 2)",
names.arg=rownames(perf_comp[order(l2_cor-l3_cor),]),las=2,cex.names=0.425,
ylim=c(min(l3_cor-l2_cor)-0.05,max(l3_cor-l2_cor)+0.05))
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L2 and l3 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/unique/cv/cv_comp_numtrain_unique_l2l3.emf"),
width=6.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l3_cor-perf_comp$l2_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l2 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/unique/cv/cv_comp_scatter_bar_unique_l1l2.emf"),
width=9,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l1_cor,l2_cor,pch=10,xlab="Layer 1 correlation",ylab="Layer 2 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l1_cor-l2_cor),c("l1_cor")]-perf_comp[order(l1_cor-l2_cor),c("l2_cor")],
ylab="Difference in correlation (Layer 2 - Layer 1)",
names.arg=rownames(perf_comp[order(l1_cor-l2_cor),]),las=2,cex.names=0.425,
ylim=c(min(l2_cor-l1_cor)-0.05,max(l2_cor-l1_cor)+0.05))
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l2 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
emf(file=file.path(main_dir,"figs/unique/cv/cv_comp_numtrain_unique_l1l2.emf"),
width=6.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l1_cor-perf_comp$l2_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Analysis of Layer 3 coefficients                                                      #
#                                                                                       #
#########################################################################################
setwd(file.path(main_dir,"data/coefs/"))
top_number <- 20
df_res_all <- read.csv("L3_coefs_proc_dup.csv",sep="\t",header=F)
df_res_all_mat <- acast(df_res_all, V2~V1, value.var="V3")
df_res_all_mat[is.na(df_res_all_mat)] <- 0.0
df_res_all_mat <- df_res_all_mat/apply(df_res_all_mat,1,max)
top_sel <- names(sort(rowSums(df_res_all_mat),decreasing=T)[1:top_number])
my_palette <- colorRampPalette(c("white","yellow","orange","darkorange","red","darkred","black"))(n = 250)
emf(file=file.path(main_dir,"figs/coefs/coefs_l3_dups.emf"),
width=8.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
heatmap.2(df_res_all_mat[top_sel,],
density.info="none",
trace="none",
margins=c(9.5,9.5),
key.xlab="Normalized Layer 3 coefficient",
key.title="",
col=my_palette)
dev.off()
df_res_all <- read.csv("L3_coefs_proc_nodup.csv",sep="\t",header=F)
df_res_all_mat <- acast(df_res_all, V2~V1, value.var="V3")
df_res_all_mat[is.na(df_res_all_mat)] <- 0.0
df_res_all_mat <- df_res_all_mat/apply(df_res_all_mat,1,max)
top_sel <- names(sort(rowSums(df_res_all_mat),decreasing=T)[1:top_number])
my_palette <- colorRampPalette(c("white","yellow","orange","darkorange","red","darkred","black"))(n = 250)
emf(file=file.path(main_dir,"figs/coefs/coefs_l3_nodups.emf"),
width=8.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
heatmap.2(df_res_all_mat[top_sel,],
density.info="none",
trace="none",
margins=c(9.5,9.5),
key.xlab="Normalized Layer 3 coefficient",
key.title="",
col=my_palette)
dev.off()
#########################################################################################
#                                                                                       #
# Aicheler model comparison with CALLC                                                  #
#                                                                                       #
#########################################################################################
setwd(file.path(main_dir,"data/parsed/aicheler_preds_2019"))
kohlbacher <- c(43.1642277516,
32.5832597724,
25.9751436911,
21.289412896,
18.7965727174,
17.8843273156,
15.5908536415,
14.7070930407,
13.9942249844,
13.6658231443,
12.9387153978,
12.5391151065,
12.5667001022,
11.9250304972,
11.9241415329,
11.0831000028,
10.7262296233)
df_res_all <- read.csv("results_avgerr.csv")
df_res_all <- df_res_all[(df_res_all$algo %in% c("Layer 3")),]
df_res_all <- df_res_all[df_res_all$number_train != 190,]
df_res_all$perf <- df_res_all$perf*600
callc <- as.numeric(sapply(split(df_res_all$perf,df_res_all$number_train),median))
emf(file=file.path(main_dir,"figs/comparison/aicheler_callc_comparison.emf"),
width=8.5,
height=6,
pointsize=12,family="Arial",emfPlus=FALSE)
plot(seq(20,180,10),kohlbacher,type="l",ylim=c(0,47),xlab="Training analytes",ylab="MAE (s)",main="",xaxt="n")
points(seq(20,180,10),kohlbacher,pch=17,col="lightblue")
boxplot(df_res_all$perf~df_res_all$number_train,at=seq(20,180,10),add=T,boxwex=3.0)
lines(seq(20,180,10),callc)
points(seq(20,180,10),callc,pch=16,col="salmon")
legend(120,30,
c("Aicheler model (SVR)","CALLC (Layer 3)"),
pch=c(17,16),
col=c("lightblue","salmon"))
dev.off()
