svg(filename=file.path(main_dir,"figs/layer_1_comp_lc_mae.svg"),
width=6.5,
height=6,
pointsize=12)
plot_learning_curves(comparison_algo_summary[comparison_algo_summary$algo %in% l1_selection,],
ylab="MAE relative to total elution time (%)",
ylim=c(0.0,26.0),
title="Duplicate analytes")
dev.off()
comparison_algo_summary <- read.csv("results_avgerr.csv")
l1_selection <-  c("Layer 1","Layer 2","Layer 3")
comparison_algo_summary$algo <- factor(comparison_algo_summary$algo, levels = l1_selection)
svg(filename=file.path(main_dir,"figs/layer_comp_lc_mae.svg"),
width=6.5,
height=6,
pointsize=12)
plot_learning_curves(comparison_algo_summary[comparison_algo_summary$algo %in% l1_selection,],
ylab="MAE relative to total elution time (%)",
ylim=c(0.0,26.0),
title="Duplicate analytes")
dev.off()
#########################################################################################
#                                                                                       #
# Plot the learning curves                                                              #
# No duplicate analytes - avgerr                                                        #
#                                                                                       #
#########################################################################################
setwd(file.path(main_dir,"data/parsed/nodup_preds_2019_allmods/"))
comparison_algo_summary <- read.csv("results_avgerr.csv")
l1_selection <-  c("LASSO","BRR","SVR","AB","GB","Layer 1")
comparison_algo_summary$algo <- factor(comparison_algo_summary$algo, levels = l1_selection)
svg(filename=file.path(main_dir,"figs/layer_1_unique_comp_lc_mae.svg"),
width=6.5,
height=6,
pointsize=12)
plot_learning_curves(comparison_algo_summary[comparison_algo_summary$algo %in% l1_selection,],
ylab="MAE relative to total elution time (%)",
ylim=c(0.0,26.0),
title="Unique analyte structures")
dev.off()
comparison_algo_summary <- read.csv("results_avgerr.csv")
l1_selection <-  c("Layer 1","Layer 2","Layer 3")
comparison_algo_summary$algo <- factor(comparison_algo_summary$algo, levels = l1_selection)
svg(filename=file.path(main_dir,"figs/layer_unique_comp_lc_mae.svg"),
width=6.5,
height=6,
pointsize=12)
plot_learning_curves(comparison_algo_summary[comparison_algo_summary$algo %in% l1_selection,],
ylab="MAE relative to total elution time (%)",
ylim=c(0.0,26.0),
title="Unique analyte structures")
dev.off()
#########################################################################################
#                                                                                       #
# Plot the learning curves                                                              #
# Duplicate analytes - cor                                                              #
#                                                                                       #
#########################################################################################
setwd(file.path(main_dir,"data/parsed/dup_preds_2019/"))
comparison_algo_summary <- read.csv("results_cor.csv")
l1_selection <-  c("LASSO","BRR","SVR","AB","GB","Layer 1")
comparison_algo_summary$algo <- factor(comparison_algo_summary$algo, levels = l1_selection)
svg(filename=file.path(main_dir,"figs/layer_1_comp_lc_r.svg"),
width=6.5,
height=6,
pointsize=12)
plot_learning_curves(comparison_algo_summary[comparison_algo_summary$algo %in% l1_selection,],
ylab="Pearson correlation",
ylim=c(0.0,1.0),
percentage=F,
legend_loc=c(0.95,0.1),
title="Duplicate analytes")
dev.off()
comparison_algo_summary <- read.csv("results_cor.csv")
l1_selection <-  c("Layer 1","Layer 2","Layer 3")
comparison_algo_summary$algo <- factor(comparison_algo_summary$algo, levels = l1_selection)
svg(filename=file.path(main_dir,"figs/layer_comp_lc_r.svg"),
width=6.5,
height=6,
pointsize=12)
plot_learning_curves(comparison_algo_summary[comparison_algo_summary$algo %in% l1_selection,],
ylab="Pearson correlation",
ylim=c(0.0,1.0),
percentage=F,
legend_loc=c(0.95,0.1),
title="Duplicate analytes")
dev.off()
#########################################################################################
#                                                                                       #
# Plot the learning curves                                                              #
# No duplicate analytes - cor                                                           #
#                                                                                       #
#########################################################################################
setwd(file.path(main_dir,"data/parsed/nodup_preds_2019_allmods/"))
comparison_algo_summary <- read.csv("results_cor.csv")
l1_selection <-  c("LASSO","BRR","SVR","AB","GB","Layer 1")
comparison_algo_summary$algo <- factor(comparison_algo_summary$algo, levels = l1_selection)
svg(filename=file.path(main_dir,"figs/layer_1_unique_comp_lc_r.svg"),
width=6.5,
height=6,
pointsize=12)
plot_learning_curves(comparison_algo_summary[comparison_algo_summary$algo %in% l1_selection,],
ylab="Pearson correlation",
ylim=c(0.0,1.0),
percentage=F,
legend_loc=c(0.95,0.1),
title="Unique analyte structures")
dev.off()
comparison_algo_summary <- read.csv("results_cor.csv")
l1_selection <-  c("Layer 1","Layer 2","Layer 3")
comparison_algo_summary$algo <- factor(comparison_algo_summary$algo, levels = l1_selection)
svg(filename=file.path(main_dir,"figs/layer_unique_comp_lc_r.svg"),
width=6.5,
height=6,
pointsize=12)
plot_learning_curves(comparison_algo_summary[comparison_algo_summary$algo %in% l1_selection,],
ylab="Pearson correlation",
ylim=c(0.0,1.0),
percentage=F,
legend_loc=c(0.95,0.1),
title="Unique analyte structures")
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results                                                                   #
#                                                                                       #
#########################################################################################
setwd(file.path(main_dir,"data/parsed/dup_cv_preds_2019"))
all_l1 <- read.csv("full_l1_preds_cor.csv")
all_l2 <- read.csv("full_l2_preds_cor.csv")
all_l3 <- read.csv("full_l3_preds_cor.csv")
sum(abs(all_l1$rt-all_l1$pred))/length(all_l1$rt)
sum(abs(all_l2$rt-all_l2$pred))/length(all_l1$rt)
sum(abs(all_l3$rt-all_l3$pred))/length(all_l1$rt)
median(abs(all_l1$rt-all_l1$pred))
median(abs(all_l2$rt-all_l2$pred))
median(abs(all_l3$rt-all_l3$pred))
cor(all_l1$rt,all_l1$pred)
cor(all_l2$rt,all_l2$pred)
cor(all_l3$rt,all_l3$pred)
unique_experi <- unique(all_l1$experiment)
l1_mae <- c()
l1_mae_sd <- c()
l2_mae <- c()
l2_mae_sd <- c()
l3_mae <- c()
l3_mae_sd <- c()
l1_cor <- c()
l1_cor_sd <- c()
l2_cor <- c()
l2_cor_sd <- c()
l3_cor <- c()
l3_cor_sd <- c()
train_sizes <- c()
for (e in unique_experi){
l1_mae_folds <- c()
l1_cor_folds <- c()
l2_mae_folds <- c()
l2_cor_folds <- c()
l3_mae_folds <- c()
l3_cor_folds <- c()
temp_l1 <- all_l1[all_l1$experiment==e,]
temp_l2 <- all_l2[all_l2$experiment==e,]
temp_l3 <- all_l3[all_l3$experiment==e,]
for (i in unique(temp_l1$fold_number)){
temptemp_l1 <- temp_l1[temp_l1$fold_number == i,]
l1_mae_folds <- c(l1_mae_folds,sum(abs(temptemp_l1$rt-temptemp_l1$pred))/length(temptemp_l1$rt))
l1_cor_folds <- c(l1_cor_folds,cor(temptemp_l1$rt,temptemp_l1$pred))
}
for (i in unique(temp_l2$fold_number)){
temptemp_l2 <- temp_l2[temp_l2$fold_number == i,]
l2_mae_folds <- c(l2_mae_folds,sum(abs(temptemp_l2$rt-temptemp_l2$pred))/length(temptemp_l2$rt))
l2_cor_folds <- c(l2_cor_folds,cor(temptemp_l2$rt,temptemp_l2$pred))
}
for (i in unique(temp_l3$fold_number)){
temptemp_l3 <- temp_l3[temp_l3$fold_number == i,]
l3_mae_folds <- c(l3_mae_folds,sum(abs(temptemp_l3$rt-temptemp_l3$pred))/length(temptemp_l3$rt))
l3_cor_folds <- c(l3_cor_folds,cor(temptemp_l3$rt,temptemp_l3$pred))
}
l1_mae <- c(l1_mae,sum(abs(temp_l1$rt-temp_l1$pred))/length(temp_l1$rt))
l2_mae <- c(l2_mae,sum(abs(temp_l2$rt-temp_l2$pred))/length(temp_l2$rt))
l3_mae <- c(l3_mae,sum(abs(temp_l3$rt-temp_l3$pred))/length(temp_l1$rt))
l1_cor <- c(l1_cor,cor(temp_l1$rt,temp_l1$pred))
l2_cor <- c(l2_cor,cor(temp_l2$rt,temp_l2$pred))
l3_cor <- c(l3_cor,cor(temp_l3$rt,temp_l3$pred))
l1_mae_sd <- c(l1_mae_sd,sd(l1_mae_folds,na.rm=T))
l1_cor_sd <- c(l1_cor_sd,sd(l1_cor_folds,na.rm=T))
l2_mae_sd <- c(l2_mae_sd,sd(l2_mae_folds,na.rm=T))
l2_cor_sd <- c(l2_cor_sd,sd(l2_cor_folds,na.rm=T))
l3_mae_sd <- c(l3_mae_sd,sd(l3_mae_folds,na.rm=T))
l3_cor_sd <- c(l3_cor_sd,sd(l3_cor_folds,na.rm=T))
train_sizes <- c(train_sizes,temp_l1$train_size[1])
}
perf_comp <- data.frame(l1_cor=l1_cor,
l2_cor=l2_cor,
l3_cor=l3_cor,
l1_mae=l1_mae,
l2_mae=l2_mae,
l3_mae=l3_mae,
l1_cor_sd=l1_cor_sd,
l1_mae_sd=l1_mae_sd,
l2_cor_sd=l2_cor_sd,
l2_mae_sd=l2_mae_sd,
l3_cor_sd=l3_cor_sd,
l3_mae_sd=l3_mae_sd,
train_sizes=train_sizes)
rownames(perf_comp) <- unique_experi
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l3 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_scatter_bar.svg"),
width=9,
height=6,
pointsize=12)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l1_cor,l3_cor,pch=10,xlab="Layer 1 correlation",ylab="Layer 3 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l1_cor-l3_cor),c("l3_cor")]-perf_comp[order(l1_cor-l3_cor),c("l1_cor")],
ylab="Difference in correlation (Layer 3 - Layer 1)",
names.arg=rownames(perf_comp[order(l1_cor-l3_cor),]),las=2,cex.names=0.425)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l3 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_numtrain.svg"),
width=6.5,
height=6,
pointsize=12)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l3_cor-perf_comp$l1_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
#sel_text <- c(
#  rownames(perf_comp[rank(perf_comp$diff_l) == nrow(perf_comp),]),
#  rownames(perf_comp[rank(perf_comp$diff_l) == nrow(perf_comp)-1,]),
#  rownames(perf_comp[rank(perf_comp$diff_l) == 1,]),
#  rownames(perf_comp[rank(perf_comp$diff_l) == 2,])
#)
#text(perf_comp[sel_text[1],]$diff_l,perf_comp[sel_text[1],]$train_sizes+35,labels=sel_text[1],cex=0.7)
#text(perf_comp[sel_text[2],]$diff_l,perf_comp[sel_text[2],]$train_sizes-35,labels=sel_text[2],cex=0.7)
#text(perf_comp[sel_text[3],]$diff_l,perf_comp[sel_text[3],]$train_sizes+35,labels=sel_text[3],cex=0.7)
#text(perf_comp[sel_text[4],]$diff_l,perf_comp[sel_text[4],]$train_sizes-35,labels=sel_text[4],cex=0.7)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L2 and l3 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_scatter_bar_l2l3.svg"),
width=9,
height=6,
pointsize=12)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l2_cor,l3_cor,pch=10,xlab="Layer 2 correlation",ylab="Layer 3 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l2_cor-l3_cor),c("l3_cor")]-perf_comp[order(l2_cor-l3_cor),c("l2_cor")],
ylab="Difference in correlation (Layer 3 - Layer 2)",
names.arg=rownames(perf_comp[order(l2_cor-l3_cor),]),las=2,cex.names=0.425)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L2 and l3 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_numtrain_l2l3.svg"),
width=6.5,
height=6,
pointsize=12)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l3_cor-perf_comp$l2_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l2 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_scatter_bar_l1l2.svg"),
width=9,
height=6,
pointsize=12)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l1_cor,l2_cor,pch=10,xlab="Layer 1 correlation",ylab="Layer 2 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l1_cor-l2_cor),c("l1_cor")]-perf_comp[order(l1_cor-l2_cor),c("l2_cor")],
ylab="Difference in correlation (Layer 2 - Layer 1)",
names.arg=rownames(perf_comp[order(l1_cor-l2_cor),]),las=2,cex.names=0.425)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l2 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_numtrainl1l2.svg"),
width=6.5,
height=6,
pointsize=12)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l1_cor-perf_comp$l2_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - no duplicate analytes                                           #
#                                                                                       #
#########################################################################################
setwd(file.path(main_dir,"data/parsed/nodup_cv_preds_2019_allmods"))
all_l1 <- read.csv("full_l1_preds_cor.csv")
all_l2 <- read.csv("full_l2_preds_cor.csv")
all_l3 <- read.csv("full_l3_preds_cor.csv")
sum(abs(all_l1$rt-all_l1$pred))/length(all_l1$rt)
sum(abs(all_l2$rt-all_l2$pred))/length(all_l1$rt)
sum(abs(all_l3$rt-all_l3$pred))/length(all_l1$rt)
median(abs(all_l1$rt-all_l1$pred))
median(abs(all_l2$rt-all_l2$pred))
median(abs(all_l3$rt-all_l3$pred))
cor(all_l1$rt,all_l1$pred)
cor(all_l2$rt,all_l2$pred)
cor(all_l3$rt,all_l3$pred)
unique_experi <- unique(all_l1$experiment)
l1_mae <- c()
l1_mae_sd <- c()
l2_mae <- c()
l2_mae_sd <- c()
l3_mae <- c()
l3_mae_sd <- c()
l1_cor <- c()
l1_cor_sd <- c()
l2_cor <- c()
l2_cor_sd <- c()
l3_cor <- c()
l3_cor_sd <- c()
train_sizes <- c()
for (e in unique_experi){
l1_mae_folds <- c()
l1_cor_folds <- c()
l2_mae_folds <- c()
l2_cor_folds <- c()
l3_mae_folds <- c()
l3_cor_folds <- c()
temp_l1 <- all_l1[all_l1$experiment==e,]
temp_l2 <- all_l2[all_l2$experiment==e,]
temp_l3 <- all_l3[all_l3$experiment==e,]
for (i in unique(temp_l1$fold_number)){
temptemp_l1 <- temp_l1[temp_l1$fold_number == i,]
l1_mae_folds <- c(l1_mae_folds,sum(abs(temptemp_l1$rt-temptemp_l1$pred))/length(temptemp_l1$rt))
l1_cor_folds <- c(l1_cor_folds,cor(temptemp_l1$rt,temptemp_l1$pred))
}
for (i in unique(temp_l2$fold_number)){
temptemp_l2 <- temp_l2[temp_l2$fold_number == i,]
l2_mae_folds <- c(l2_mae_folds,sum(abs(temptemp_l2$rt-temptemp_l2$pred))/length(temptemp_l2$rt))
l2_cor_folds <- c(l2_cor_folds,cor(temptemp_l2$rt,temptemp_l2$pred))
}
for (i in unique(temp_l3$fold_number)){
temptemp_l3 <- temp_l3[temp_l3$fold_number == i,]
l3_mae_folds <- c(l3_mae_folds,sum(abs(temptemp_l3$rt-temptemp_l3$pred))/length(temptemp_l3$rt))
l3_cor_folds <- c(l3_cor_folds,cor(temptemp_l3$rt,temptemp_l3$pred))
}
l1_mae <- c(l1_mae,sum(abs(temp_l1$rt-temp_l1$pred))/length(temp_l1$rt))
l2_mae <- c(l2_mae,sum(abs(temp_l2$rt-temp_l2$pred))/length(temp_l2$rt))
l3_mae <- c(l3_mae,sum(abs(temp_l3$rt-temp_l3$pred))/length(temp_l1$rt))
l1_cor <- c(l1_cor,cor(temp_l1$rt,temp_l1$pred))
l2_cor <- c(l2_cor,cor(temp_l2$rt,temp_l2$pred))
l3_cor <- c(l3_cor,cor(temp_l3$rt,temp_l3$pred))
l1_mae_sd <- c(l1_mae_sd,sd(l1_mae_folds,na.rm=T))
l1_cor_sd <- c(l1_cor_sd,sd(l1_cor_folds,na.rm=T))
l2_mae_sd <- c(l2_mae_sd,sd(l2_mae_folds,na.rm=T))
l2_cor_sd <- c(l2_cor_sd,sd(l2_cor_folds,na.rm=T))
l3_mae_sd <- c(l3_mae_sd,sd(l3_mae_folds,na.rm=T))
l3_cor_sd <- c(l3_cor_sd,sd(l3_cor_folds,na.rm=T))
train_sizes <- c(train_sizes,temp_l1$train_size[1])
}
perf_comp <- data.frame(l1_cor=l1_cor,
l2_cor=l2_cor,
l3_cor=l3_cor,
l1_mae=l1_mae,
l2_mae=l2_mae,
l3_mae=l3_mae,
l1_cor_sd=l1_cor_sd,
l1_mae_sd=l1_mae_sd,
l2_cor_sd=l2_cor_sd,
l2_mae_sd=l2_mae_sd,
l3_cor_sd=l3_cor_sd,
l3_mae_sd=l3_mae_sd,
train_sizes=train_sizes)
rownames(perf_comp) <- unique_experi
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l3 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_scatter_bar_unique.svg"),
width=9,
height=6,
pointsize=12)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l1_cor,l3_cor,pch=10,xlab="Layer 1 correlation",ylab="Layer 3 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l1_cor-l3_cor),c("l3_cor")]-perf_comp[order(l1_cor-l3_cor),c("l1_cor")],
ylab="Difference in correlation (Layer 3 - Layer 1)",
names.arg=rownames(perf_comp[order(l1_cor-l3_cor),]),las=2,cex.names=0.425)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l3 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_numtrain_unique.svg"),
width=6.5,
height=6,
pointsize=12)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l3_cor-perf_comp$l1_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L2 and l3 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_scatter_bar_unique_l2l3.svg"),
width=9,
height=6,
pointsize=12)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l2_cor,l3_cor,pch=10,xlab="Layer 2 correlation",ylab="Layer 3 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l2_cor-l3_cor),c("l3_cor")]-perf_comp[order(l2_cor-l3_cor),c("l2_cor")],
ylab="Difference in correlation (Layer 3 - Layer 2)",
names.arg=rownames(perf_comp[order(l2_cor-l3_cor),]),las=2,cex.names=0.425)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L2 and l3 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_numtrain_unique_l2l3.svg"),
width=6.5,
height=6,
pointsize=12)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l3_cor-perf_comp$l2_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l2 comparison - scatter and barplot                      #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_scatter_bar_unique_l1l2.svg"),
width=9,
height=6,
pointsize=12)
par(mfrow=c(1,2),mar=c(10.1,4.1,4.1,2.1))
plot(l1_cor,l2_cor,pch=10,xlab="Layer 1 correlation",ylab="Layer 2 correlation",xlim=c(0.0,1),ylim=c(0.0,1))
abline(0,1,lty=2)
barplot(perf_comp[order(l1_cor-l2_cor),c("l1_cor")]-perf_comp[order(l1_cor-l2_cor),c("l2_cor")],
ylab="Difference in correlation (Layer 2 - Layer 1)",
names.arg=rownames(perf_comp[order(l1_cor-l2_cor),]),las=2,cex.names=0.425)
dev.off()
#########################################################################################
#                                                                                       #
# Plot the CV results - L1 and l2 comparison - dataset size                             #
#                                                                                       #
#########################################################################################
svg(filename=file.path(main_dir,"figs/cv_comp_numtrain_unique_l1l2.svg"),
width=6.5,
height=6,
pointsize=12)
par(mar=c(5, 4, 4, 2) + 0.1)
par(mfrow=c(1,1))
perf_comp$diff_l <- perf_comp$l1_cor-perf_comp$l2_cor
plot(perf_comp$diff_l,perf_comp$train_sizes,pch=10)
abline(v=0.0,lty=2)
abline(h=50,lty=3)
abline(h=100,lty=3)
text(0.6,57,"n=50",cex=0.7)
text(0.6,107,"n=100",cex=0.7)
dev.off()
